!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){e.exports='<div id="aboutPageContent" class="additional-pages" style="display: none">\n    <h1>Сайт "Прогноз погоды"</h1>\n\n    <p>Сайт состоит из трех блоков:\n        <ul>\n            <li>\n                В шапке сайта находится форма с полем ввода и кнопкой "Искать" и переключатель механизма\n                запроса (два радиобаттона fetch/XHR) и меню, ведущее на другие страницы\n            </li>\n            <li>\n                Центральная часть содержит информационное описание для главной страницы. И прогноз погоды\n                для страницы конкретного города. В случае ошибки при запросе она отображает сообщение об\n                ошибке\n            </li>\n            <li>\n                В подвале сайта отображаются 5 последних городов, погоду в которых искал пользователь. При\n                ошибке запрос не добавляется в список.\n            </li>\n        </ul>\n    </p>\n    <h3>Детали</h3>\n    <p>\n        <ul>\n            <li>\n                При вводе текста в поле ввода и нажатие кнопки "Ввод" ( или по клику на кнопке "Искать" )\n                пользователь попадает на страницу с прогнозом погоды в заданном городе. При этом страницу\n                можно добавить в закладки или отправить сообщением - при открытии ссылки должен показаться\n                тот же город.\n            </li>\n            <li>\n                При изменении центра карты ( перетаскивание / зум ) должны отображаться данные по погоде\n                для центра карты\n            </li>\n            <li>\n                При поиске города он появляется верхним пунктов в списке последних запросов ( нижний блок\n                ), остальные пункты опускаются на 1 вниз. Пункты с номером больше 5 исчезают.\n            </li>\n            <li>\n                В любой точке на карте можно нажать \'Add to Favorites\' - это добавить точку с описанием в\n                список "Избранное". Из списка сущность можно удалить с помощью x возле записи. При клике на\n                запись в списке "Избранное" происходит переход на сохраненные координаты\n            </li>\n            <li>\n                Функция загрузки прогноза должна быть реализована в двух вариантах - с использованием fetch\n                и с использованием XHR. Блок с options для выбора (два пункта из которых всегда выбран\n                только один) какую из реализаций использовать для получения следующего прогноза.\n            </li>\n            <li>\n                Для загрузки прогноза погоды использовать сайт https://darksky.net/\n            </li>\n            <li>\n                Для получения координат по введенным данным использовать API Google Maps\n            </li>\n            <li>\n                В шапку страницы добавить меню с двумя пунктами Главная / О сайте Каждый пункт меню должен\n                открывать соответствующую страницу. "O сайте" - Отображает статическую информацию - ваше\n                имя, фото, ссылки на соцсети и свободный текст "Главная" - при входе на страницу сайт\n                определяет местоположение пользователя ( запросом на https://api.userinfo.io/userinfos ) и\n                перенаправляет на страницу с соответсвующими координатами\n            </li>\n            <li>\n                Должны поддерживаться ссылки с указанием города ( например /city/Minsk )\n            </li>\n        </ul>\n    </p>\n</div>'},function(e,t){e.exports='<div id="authorPageContent" class="additional-pages" style="display: none">\n    <h1>Anna Kiranova</h1>\n    <img id="author" src="https://avatars0.githubusercontent.com/u/35148952?s=400&u=c5a0d9bc1421c1739322d3e3c57a0b08c51bfda5&v=4"></img>\n    <div id="contactInfo">\n        <h3>Contact information:</h3>\n        <p class="contact">E-mail: <a href="anne.kiranova@gmail.com">anne.kiranova@gmail.com</a></p>\n        <p class="contact">GitHub: <a href="https://github.com/anna-kiranova">https://github.com/anna-kiranova</a></p>\n    </div>\n</div>'},function(e,t){e.exports='<div id="weatherPageContent" style="display: none">\n    <div id="mapContent" class="content-style"></div>\n</div>'},function(e,t,n){"use strict";n.r(t);var o=n(0),r=n.n(o);function i(){let e=document.getElementById("content");document.getElementById("footer").style.display="none";let t=e.querySelectorAll("#content > div");for(let e=0;e<t.length;e++)t[e].style.display="none"}function a(){i(),document.getElementById("aboutPageContent").style.display="block"}document.getElementById("content").innerHTML+=r.a;var s=n(1),c=n.n(s);function l(){i(),document.getElementById("authorPageContent").style.display="block"}document.getElementById("content").innerHTML+=c.a;var u=n(2),d=n.n(u);function h(e,t){return Promise.resolve(localStorage.setItem(e,t))}function m(e){return Promise.resolve(localStorage.getItem(e))}let f,p,g,y;function v(e){return p.splice(e,1),h("favorites",JSON.stringify(p)).then(()=>p)}document.getElementById("content").innerHTML+=d.a;let w=[];function b(e){i();let t=document.getElementById("weatherPageContent");document.getElementById("footer").style.display="block",t.style.display="block";let n=!g;if(!g){(g=new ymaps.Map("mapContent",{center:[51.50853,-.12574],zoom:9,controls:["zoomControl","typeSelector","fullscreenControl"]})).events.add("boundschange",function(e,t){let n=null;return function(...o){let r=this;n&&clearTimeout(n),n=setTimeout(function(){e.apply(r,o),n=null},t)}}(()=>{!function(e){if(document.getElementById("weather-target").innerHTML='<img src="./icons/load.gif" width="300"></img>',document.getElementById("fetch").checked)fetch("https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/b5cc0ae068f1ee7c89f7deff0ae38728/"+e+"?lang=en&units=si").then(function(e){if(e.ok)return e.json()}).then(function(e){I(e)}).catch(function(e){document.getElementById("weather-target").innerHTML='<img src="./icons/sad.png" width="80"></img><br><p>We are really sorry - the forecast is unavailable right now...</p>',console.log("There are some problems with receiving weather! "+e)});else{let t=new XMLHttpRequest;t.open("GET","https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/b5cc0ae068f1ee7c89f7deff0ae38728/"+e+"?lang=en&units=si",!0),t.send(),t.onreadystatechange=function(){if(4==t.readyState)if(200!=t.status)document.getElementById("weather-target").innerHTML='<img src="./icons/sad.png" width="80"></img><br><p>We are really sorry - the forecast is unavailable right now...</p>',console.log(t.status+": "+t.statusText);else try{let e=JSON.parse(t.responseText);I(e)}catch(e){console.log("Attention! Incorrect answer "+e.message)}}}}(g.getCenter())},600));let e=new ymaps.control.Button({data:{image:"./icons/star.png",title:"Click to add favorite"},options:{size:"small",selectOnClick:!1}});e.events.add("click",E),g.controls.add(e)}e?function(e){fetch("https://maps.google.com/maps/api/geocode/json?address="+encodeURIComponent(e)+"&key=AIzaSyDa7DCL2NO9KMPd9DYVk_u3u0wCbm0XXFY").then(function(e){if(e.ok)return e.json();alert("There are some problems with receiving coordinates!")}).then(function(t){if(0!==t.results.length){var n=t.results[0].geometry.location.lat,o=t.results[0].geometry.location.lng;k([n,o]),y=e,function(e){return f.unshift(e),f=f.slice(0,5),h("history",JSON.stringify(f)).then(()=>f)}(e).then(C)}}).catch(function(e){alert("Not found this place on the Earth! "+e)})}(e):n&&function(){let e=new Headers;e.append("Content-Type","application/json"),e.append("Accept","application/json"),fetch("https://ipinfo.io/?token=b06e0fc311d617",{method:"GET",headers:e,mode:"cors",cache:"default"}).then(function(e){if(e.ok)return e.json();throw console.log("ip-api failure:",e),new Error("ip-api failure")}).then(function(e){let t=e.loc,n=t.split(",");k([+n[0],+n[1]])})}(),m("history").then(e=>f=e?JSON.parse(e):[]).then(C),m("favorites").then(e=>p=e?JSON.parse(e):[]).then(e=>{for(let t=0;t<e.length;t++)w.push(T(e[t].name,e[t].lat_lon));B(e)})}function E(){let e=prompt("Введите название места",y);if(e&&(e=e.trim()),!e)return;let t=g.getCenter();(function(e){return p.unshift(e),h("favorites",JSON.stringify(p)).then(()=>p)})({lat_lon:t,name:e}).then(n=>{let o=T(e,t);w.unshift(o),B(n)})}function I(e){let t=e.currently,n=`<div class ="w"> Temperature: ${t.temperature} <img src="./icons/celsium.png" alt="C" width="15"></img></div>`,o=`<div class ="w"> Right now: ${t.summary} </div>`,r=`<img class ="w" src="./icons/${t.icon}.png" alt="${t.icon}" width="50" title="${t.icon}"></img>`,i=`<div class ="w"> Pressure: ${t.pressure} hPa</div>`,a=`<div class ="w"> Humidity: ${parseInt(100*t.humidity)} %</div>`,s=`<div class ="w"> Wind speed: ${t.windSpeed} m/s</div>`;document.getElementById("weather-target").innerHTML=n+o+r+i+a+s}function k(e){g.panTo(e,{flying:!0})}function B(e){document.getElementById("favorites-target").innerHTML="";for(let t=0;t<e.length;t++){let n=document.createElement("div");n.className="aItems";let o=document.createElement("a");o.href="#",o.onclick=function(){return k(e[t].lat_lon),!1},o.innerText=e[t].name;let r=document.createElement("a");r.innerHTML='<img src="./icons/delete.png" alt="x" width="15"></img>',r.href="#",r.onclick=function(){return!!confirm("Are you sure?")&&(g.geoObjects.remove(w[t]),w.splice(t,1),v(t).then(B),!1)},n.appendChild(o),n.appendChild(r),document.getElementById("favorites-target").appendChild(n)}}function C(e){document.getElementById("history-target").innerHTML="";for(let t=0;t<e.length;t++){let n=document.createElement("div"),o=document.createElement("a");n.className="aItems",o.href="#weather/"+e[t],o.innerText=e[t],n.appendChild(o),document.getElementById("history-target").appendChild(n)}}function T(e,t){let n=new ymaps.GeoObject({geometry:{type:"Point",coordinates:t},properties:{iconContent:e}},{preset:"islands#redStretchyIcon",draggable:!1});return g.geoObjects.add(n),n}ymaps.ready(()=>{new class{constructor(e){this.routes=e.routes||[],this.eventBus=e.eventBus,window.addEventListener("hashchange",()=>this.handleUrl(decodeURIComponent(window.location.hash))),this.handleUrl(decodeURIComponent(window.location.hash))}handleUrl(e){e=e.slice(1);let t=this.currentRoute;var n=this.findNewActiveRoute(e);let o=this.getRouteParams(n,e);return Promise.resolve().then(()=>{if(t)return this.eventBus&&this.eventBus.trigger("route:"+t.name+":leave",...this.currentRouteParams),t.onLeave&&t.onLeave(...this.currentRouteParams)}).then(()=>{if(n)return this.eventBus&&this.eventBus.trigger("route:"+n.name+":beforeenter",...o),n.onBeforeEnter&&n.onBeforeEnter(...o)}).then(()=>{if(n)return this.eventBus&&this.eventBus.trigger("route:"+n.name+":enter",...o),n.onEnter&&n.onEnter(...o)}).then(()=>{this.currentRoute=n,this.currentRouteParams=o})}findNewActiveRoute(e){for(let t=0;t<this.routes.length;t++){let n=this.routes[t];if("string"==typeof n.match){if(e===n.match)return n}else if("function"==typeof n.match){if(n.match(e))return n}else if(n.match instanceof RegExp&&e.match(n.match))return n}}getRouteParams(e,t){if(!e)return[];if(e.match instanceof RegExp){var n=t.match(e.match)||[];return n.shift(),n}return[]}}({routes:[{name:"weather",match:"",onEnter:b},{name:"weather",match:"weather",onEnter:b},{name:"weather",match:/weather\/(.+)/,onEnter:b},{name:"about",match:"about",onEnter:a},{name:"author",match:"author",onEnter:l}]})})}]);
//# sourceMappingURL=build.9b2f807b8be3ebb31f3e.js.map