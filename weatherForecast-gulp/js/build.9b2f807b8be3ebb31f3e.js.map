{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/pages/aboutPage.html","webpack:///./src/pages/authorPage.html","webpack:///./src/pages/weatherForecastPage.html","webpack:///./src/js/hidePage.js","webpack:///./src/js/aboutPage.js","webpack:///./src/js/authorPage.js","webpack:///./src/js/storage.js","webpack:///./src/js/history.js","webpack:///./src/js/favorites.js","webpack:///./src/js/weatherForecastPage.js","webpack:///./src/js/debounce.js","webpack:///./src/main.js","webpack:///./src/js/router.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hideAll","content","document","getElementById","style","display","nodes","querySelectorAll","length","showAboutPage","innerHTML","aboutPage_default","a","showAuthorPage","authorPage_default","setStorage","val","Promise","resolve","localStorage","setItem","getStorage","getItem","history_history","favorites_favorites","map","lastCity","removeFavorite","splice","JSON","stringify","then","weatherForecastPage_default","points","showWeatherPage","city","weatherPageContent","firstStart","ymaps","Map","center","zoom","controls","events","add","fun","delay","timer","args","this","clearTimeout","setTimeout","apply","debounce","lat_lon","checked","fetch","response","ok","json","weather","showWheather","catch","e","console","log","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","statusText","weatherData","parse","responseText","message","weatherUpdate","getCenter","favoriteButton","control","Button","data","image","title","options","size","selectOnClick","clickFavoriteButton","encodeURIComponent","alert","cityCoordinates","results","lat","geometry","location","lng","changeMapPosition","item","unshift","slice","addHistory","showHistory","err","getCityCoordinates","hdr","Headers","append","method","headers","cache","Error","userinfo","loc","split","getUserCoordinates","historyJSON","favoritesJSON","favorites","push","createPoint","showFavorites","prompt","trim","addFavorite","w","currently","temp","temperature","sum","summary","icon","press","pressure","hum","parseInt","humidity","wind","windSpeed","panTo","flying","div","createElement","className","href","onclick","innerText","x","confirm","geoObjects","remove","appendChild","history","point","GeoObject","type","coordinates","properties","iconContent","preset","draggable","ready","[object Object]","routes","eventBus","window","addEventListener","handleUrl","decodeURIComponent","hash","url","previousRoute","currentRoute","newRoute","findNewActiveRoute","routeParams","getRouteParams","trigger","currentRouteParams","onLeave","onBeforeEnter","onEnter","route","match","RegExp","params","shift"],"mappings":"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","file":"js/build.9b2f807b8be3ebb31f3e.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div id=\\\"aboutPageContent\\\" class=\\\"additional-pages\\\" style=\\\"display: none\\\">\\n    <h1>Сайт \\\"Прогноз погоды\\\"</h1>\\n\\n    <p>Сайт состоит из трех блоков:\\n        <ul>\\n            <li>\\n                В шапке сайта находится форма с полем ввода и кнопкой \\\"Искать\\\" и переключатель механизма\\n                запроса (два радиобаттона fetch/XHR) и меню, ведущее на другие страницы\\n            </li>\\n            <li>\\n                Центральная часть содержит информационное описание для главной страницы. И прогноз погоды\\n                для страницы конкретного города. В случае ошибки при запросе она отображает сообщение об\\n                ошибке\\n            </li>\\n            <li>\\n                В подвале сайта отображаются 5 последних городов, погоду в которых искал пользователь. При\\n                ошибке запрос не добавляется в список.\\n            </li>\\n        </ul>\\n    </p>\\n    <h3>Детали</h3>\\n    <p>\\n        <ul>\\n            <li>\\n                При вводе текста в поле ввода и нажатие кнопки \\\"Ввод\\\" ( или по клику на кнопке \\\"Искать\\\" )\\n                пользователь попадает на страницу с прогнозом погоды в заданном городе. При этом страницу\\n                можно добавить в закладки или отправить сообщением - при открытии ссылки должен показаться\\n                тот же город.\\n            </li>\\n            <li>\\n                При изменении центра карты ( перетаскивание / зум ) должны отображаться данные по погоде\\n                для центра карты\\n            </li>\\n            <li>\\n                При поиске города он появляется верхним пунктов в списке последних запросов ( нижний блок\\n                ), остальные пункты опускаются на 1 вниз. Пункты с номером больше 5 исчезают.\\n            </li>\\n            <li>\\n                В любой точке на карте можно нажать 'Add to Favorites' - это добавить точку с описанием в\\n                список \\\"Избранное\\\". Из списка сущность можно удалить с помощью x возле записи. При клике на\\n                запись в списке \\\"Избранное\\\" происходит переход на сохраненные координаты\\n            </li>\\n            <li>\\n                Функция загрузки прогноза должна быть реализована в двух вариантах - с использованием fetch\\n                и с использованием XHR. Блок с options для выбора (два пункта из которых всегда выбран\\n                только один) какую из реализаций использовать для получения следующего прогноза.\\n            </li>\\n            <li>\\n                Для загрузки прогноза погоды использовать сайт https://darksky.net/\\n            </li>\\n            <li>\\n                Для получения координат по введенным данным использовать API Google Maps\\n            </li>\\n            <li>\\n                В шапку страницы добавить меню с двумя пунктами Главная / О сайте Каждый пункт меню должен\\n                открывать соответствующую страницу. \\\"O сайте\\\" - Отображает статическую информацию - ваше\\n                имя, фото, ссылки на соцсети и свободный текст \\\"Главная\\\" - при входе на страницу сайт\\n                определяет местоположение пользователя ( запросом на https://api.userinfo.io/userinfos ) и\\n                перенаправляет на страницу с соответсвующими координатами\\n            </li>\\n            <li>\\n                Должны поддерживаться ссылки с указанием города ( например /city/Minsk )\\n            </li>\\n        </ul>\\n    </p>\\n</div>\"","module.exports = \"<div id=\\\"authorPageContent\\\" class=\\\"additional-pages\\\" style=\\\"display: none\\\">\\n    <h1>Anna Kiranova</h1>\\n    <img id=\\\"author\\\" src=\\\"https://avatars0.githubusercontent.com/u/35148952?s=400&u=c5a0d9bc1421c1739322d3e3c57a0b08c51bfda5&v=4\\\"></img>\\n    <div id=\\\"contactInfo\\\">\\n        <h3>Contact information:</h3>\\n        <p class=\\\"contact\\\">E-mail: <a href=\\\"anne.kiranova@gmail.com\\\">anne.kiranova@gmail.com</a></p>\\n        <p class=\\\"contact\\\">GitHub: <a href=\\\"https://github.com/anna-kiranova\\\">https://github.com/anna-kiranova</a></p>\\n    </div>\\n</div>\"","module.exports = \"<div id=\\\"weatherPageContent\\\" style=\\\"display: none\\\">\\n    <div id=\\\"mapContent\\\" class=\\\"content-style\\\"></div>\\n</div>\"","'use strict';\n\nexport default function hideAll() {\n    let content = document.getElementById('content');\n    let footer = document.getElementById('footer');\n    footer.style.display = 'none';\n    let nodes = content.querySelectorAll('#content > div');\n    for (let i = 0; i < nodes.length; i++) {\n        nodes[i].style.display = 'none';\n    }\n}","'use strict';\n\nimport about from '../pages/aboutPage.html';\ndocument.getElementById('content').innerHTML += about;\n\nimport hideAll from './hidePage';\n\nexport default function showAboutPage() {\n    hideAll();\n    let aboutPageContent = document.getElementById('aboutPageContent');\n    aboutPageContent.style.display = 'block';\n}\n","'use strict';\n\nimport author from '../pages/authorPage.html';\ndocument.getElementById('content').innerHTML += author;\n\nimport hideAll from './hidePage';\n\nexport default function showAuthorPage() {\n    hideAll();\n    let authorPageContent = document.getElementById('authorPageContent');\n    authorPageContent.style.display = 'block';\n}\n","'use strict';\n\n// async LS\nexport function setStorage(key, val) {\n    return Promise.resolve(localStorage.setItem(key, val));\n}\n\nexport function getStorage(key) {\n    return Promise.resolve(localStorage.getItem(key));\n}\n","'use strict';\n\nimport {setStorage} from './storage';\nimport {getStorage} from './storage';\n\nlet history;\n\nexport function getHistory() {\n    return getStorage('history').then((historyJSON) => {\n        history = historyJSON ? JSON.parse(historyJSON) : [];\n        return history;\n    });\n}\n\nexport function addHistory(item) {\n    history.unshift(item);\n    history = history.slice(0, 5);\n    return setStorage('history', JSON.stringify(history)).then(() => history);\n}\n","'use strict';\n\nimport { setStorage } from './storage';\nimport { getStorage } from './storage';\n\nlet favorites;\n\nexport function getFavorites() {\n    return getStorage('favorites').then((favoritesJSON) => {\n        favorites = favoritesJSON ? JSON.parse(favoritesJSON) : [];\n        return favorites;\n    });\n}\n\nexport function addFavorite(item) {\n    favorites.unshift(item);\n    return setStorage('favorites', JSON.stringify(favorites)).then(() => favorites);\n}\n\nexport function removeFavorite(i) {\n    favorites.splice(i, 1);\n    return setStorage('favorites', JSON.stringify(favorites)).then(() => favorites);\n}","'use strict';\n\nimport weather from '../pages/weatherForecastPage.html';\ndocument.getElementById('content').innerHTML += weather;\n\nimport hideAll from './hidePage';\nimport debounce from './debounce';\nimport { getHistory, addHistory } from './history';\nimport { addFavorite, getFavorites, removeFavorite } from './favorites';\n\nlet map;\nlet lastCity;\nlet points = [];\n\nexport default function showWeatherPage(city) {\n    hideAll();\n    let weatherPageContent = document.getElementById('weatherPageContent');\n    let footer = document.getElementById('footer');\n    footer.style.display = 'block';\n    weatherPageContent.style.display = 'block';\n\n    let firstStart = !map;\n\n    if (!map) {\n        map = new ymaps.Map('mapContent', {\n            // London coordinates\n            center: [51.50853, -0.12574],\n            zoom: 9,\n            controls: ['zoomControl', 'typeSelector', 'fullscreenControl']\n        });\n\n        map.events.add(\n            'boundschange',\n            /* 600 - delay for getCenter, selected empirically\n            when the map is loading or moving from city to city, it 3 times receives coordinates, \n            the delay gives the opportunity to take only the last coordinates, \n            and so to reduce the number of weather forecast requests */\n            debounce(() => {\n                weatherUpdate(map.getCenter());\n            }, 600)\n        );\n\n        let favoriteButton = new ymaps.control.Button({\n            data: {\n                image: './icons/star.png',\n                title: 'Click to add favorite'\n            },\n            options: {\n                size: 'small',\n                selectOnClick: false\n            }\n        });\n\n        favoriteButton.events.add('click', clickFavoriteButton);\n\n        map.controls.add(favoriteButton);\n    }\n\n    if (city) {\n        getCityCoordinates(city);\n    } else if (firstStart) {\n        getUserCoordinates();\n    }\n\n    getHistory().then(showHistory);\n\n    getFavorites().then((favorites) => {\n        for (let i = 0; i < favorites.length; i++) {\n            points.push(createPoint(favorites[i].name, favorites[i].lat_lon));\n        }\n        showFavorites(favorites);\n    })\n}\n\nfunction clickFavoriteButton() {\n    // ask name of new favorite place\n    let name = prompt('Введите название места', lastCity);\n    if (name) {\n        name = name.trim();\n    }\n    if (!name) {\n        return;\n    }\n\n    // get lat&lon of the map center\n    let lat_lon = map.getCenter();\n\n    addFavorite({lat_lon, name}).then((favorites) => {\n        // create and put the point on map\n        let p = createPoint(name, lat_lon);\n        points.unshift(p);\n        showFavorites(favorites);\n    });\n}\n\nfunction getCityCoordinates(city) {\n    return fetch(\n        'https://maps.google.com/maps/api/geocode/json?address=' +\n            encodeURIComponent(city) +\n            '&key=AIzaSyDa7DCL2NO9KMPd9DYVk_u3u0wCbm0XXFY'\n    )\n        .then(function(response) {\n            if (response.ok) {\n                return response.json();\n            }\n            alert('There are some problems with receiving coordinates!');\n        })\n        .then(function(cityCoordinates) {\n            if (cityCoordinates.results.length === 0) {\n                return;\n            }\n            var lat = cityCoordinates.results[0].geometry.location.lat;\n            var lng = cityCoordinates.results[0].geometry.location.lng;\n            changeMapPosition([lat, lng]);\n            lastCity = city;\n            addHistory(city).then(showHistory);\n        })\n        .catch(function(err) {\n            alert('Not found this place on the Earth! ' + err);\n        });\n}\n\nfunction getUserCoordinates() {\n    let hdr = new Headers();\n    hdr.append('Content-Type', 'application/json');\n    hdr.append('Accept', 'application/json');\n    let params = {\n        method: 'GET',\n        headers: hdr,\n        mode: 'cors',\n        cache: 'default'\n    };\n    fetch('https://ipinfo.io/?token=b06e0fc311d617', params)\n        .then(function(response) {\n            if (response.ok) {\n                return response.json();\n            }\n            console.log('ip-api failure:', response);\n            throw new Error('ip-api failure');\n        })\n        .then(function(userinfo) {\n            let loc = userinfo.loc;\n            let lat_lon = loc.split(',');\n            changeMapPosition([+lat_lon[0], +lat_lon[1]]);\n        });\n}\n\nfunction weatherUpdate(lat_lon) {\n    document.getElementById('weather-target').innerHTML =\n        '<img src=\"./icons/load.gif\" width=\"300\"></img>';\n    if (document.getElementById('fetch').checked) {\n        fetch(\n            'https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/b5cc0ae068f1ee7c89f7deff0ae38728/' +\n                lat_lon +\n                '?lang=en&units=si'\n        )\n            .then(function(response) {\n                if (response.ok) {\n                    return response.json();\n                }\n            })\n            .then(function(weather) {\n                showWheather(weather);\n            })\n            .catch(function(e) {\n                document.getElementById('weather-target').innerHTML =\n                    '<img src=\"./icons/sad.png\" width=\"80\"></img><br><p>We are really sorry - the forecast is unavailable right now...</p>';\n                console.log(\n                    'There are some problems with receiving weather! ' + e\n                );\n            });\n    } else {\n        let xhr = new XMLHttpRequest();\n        xhr.open(\n            'GET',\n            'https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/b5cc0ae068f1ee7c89f7deff0ae38728/' +\n                lat_lon +\n                '?lang=en&units=si',\n            true\n        );\n        xhr.send();\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState != 4) return;\n            if (xhr.status != 200) {\n                document.getElementById('weather-target').innerHTML =\n                    '<img src=\"./icons/sad.png\" width=\"80\"></img><br><p>We are really sorry - the forecast is unavailable right now...</p>';\n                console.log(xhr.status + ': ' + xhr.statusText);\n            } else {\n                try {\n                    let weatherData = JSON.parse(xhr.responseText);\n                    showWheather(weatherData);\n                } catch (e) {\n                    console.log('Attention! Incorrect answer ' + e.message);\n                }\n            }\n        };\n    }\n}\n\nfunction showWheather(weather) {\n    let w = weather.currently;\n    let temp = `<div class =\"w\"> Temperature: ${\n        w.temperature\n    } <img src=\"./icons/celsium.png\" alt=\"C\" width=\"15\"></img></div>`;\n    let sum = `<div class =\"w\"> Right now: ${w.summary} </div>`;\n    let icon = `<img class =\"w\" src=\"./icons/${w.icon}.png\" alt=\"${\n        w.icon\n    }\" width=\"50\" title=\"${w.icon}\"></img>`;\n    let press = `<div class =\"w\"> Pressure: ${w.pressure} hPa</div>`;\n    let hum = `<div class =\"w\"> Humidity: ${parseInt(w.humidity * 100)} %</div>`;\n    let wind = `<div class =\"w\"> Wind speed: ${w.windSpeed} m/s</div>`;\n    document.getElementById('weather-target').innerHTML =\n        temp + sum + icon + press + hum + wind;\n}\n\nfunction changeMapPosition(lat_lon) {\n    map.panTo(lat_lon, {\n        /* Опции перемещения:\n                разрешить уменьшать и затем увеличивать зум\n                карты при перемещении между точками */\n        flying: true\n    });\n}\n\nfunction showFavorites(favorites) {\n    document.getElementById('favorites-target').innerHTML = '';\n    for (let i = 0; i < favorites.length; i++) {\n        let div = document.createElement('div');\n        div.className = 'aItems';\n        let a = document.createElement('a');\n        a.href = '#';\n        a.onclick = function() {\n            changeMapPosition(favorites[i].lat_lon);\n            return false;\n        };\n        a.innerText = favorites[i].name;\n        let x = document.createElement('a');\n        x.innerHTML = '<img src=\"./icons/delete.png\" alt=\"x\" width=\"15\"></img>';\n        x.href = '#';\n        x.onclick = function() {\n            if (!confirm('Are you sure?')) { return false };\n            map.geoObjects.remove(points[i]);\n            points.splice(i, 1);\n            removeFavorite(i).then(showFavorites);\n            return false;\n        };\n        div.appendChild(a);\n        div.appendChild(x);\n        document.getElementById('favorites-target').appendChild(div);\n    }\n}\n\nfunction showHistory(history) {\n    document.getElementById('history-target').innerHTML = '';\n    for (let i = 0; i < history.length; i++) {\n        let div = document.createElement('div');\n        let a = document.createElement('a');\n        div.className = 'aItems';\n        a.href = '#weather/' + history[i];\n        a.innerText = history[i];\n        div.appendChild(a);\n        document.getElementById('history-target').appendChild(div);\n    }\n}\n\nfunction createPoint(name, lat_lon) {\n    // create point and put it on the map\n    let point = new ymaps.GeoObject(\n        {\n            geometry: {\n                type: 'Point',\n                coordinates: lat_lon\n            },\n            properties: {\n                iconContent: name\n            }\n        },\n        {\n            preset: 'islands#redStretchyIcon',\n            draggable: false\n        }\n    );\n    map.geoObjects.add(point);\n    return point;\n}\n","'use strict';\n\nexport default function debounce(fun, delay) {\n    let timer = null;\n    return function(...args) {\n        let t = this;\n        function onComplete() {\n            fun.apply(t, args);\n            timer = null;\n        }\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(onComplete, delay);\n    };\n}\n","'use strict';\n\nimport Router from './js/router';\nimport showAboutPage from './js/aboutPage';\nimport showAuthorPage from './js/authorPage';\nimport showWeatherPage from './js/weatherForecastPage';\n\nymaps.ready(()=> {\n    new Router({\n        routes: [\n            {\n                name: 'weather',\n                match: '',\n                onEnter: showWeatherPage\n            },\n            {\n                name: 'weather',\n                match: 'weather',\n                onEnter: showWeatherPage\n            },\n            {\n                name: 'weather',\n                match: /weather\\/(.+)/,\n                onEnter: showWeatherPage\n            },\n            {\n                name: 'about',\n                match: 'about',\n                onEnter: showAboutPage\n            },\n            {\n                name: 'author',\n                match: 'author',\n                onEnter: showAuthorPage\n            }\n        ]\n    });\n});\n\n\n","'use strict';\n\nexport default class Router {\n    constructor(options) {\n        this.routes = options.routes || [];\n        this.eventBus = options.eventBus;\n        window.addEventListener('hashchange', () => this.handleUrl(decodeURIComponent(window.location.hash)));\n        this.handleUrl(decodeURIComponent(window.location.hash));\n    }\n    handleUrl(url) {\n        url = url.slice(1);\n        let previousRoute = this.currentRoute;\n        var newRoute = this.findNewActiveRoute(url);\n        let routeParams = this.getRouteParams(newRoute, url);\n        return Promise.resolve()\n            .then(() => {\n                if (previousRoute) {\n                    if (this.eventBus) {\n                        //\"route:about:leave\"\n                        this.eventBus.trigger('route:' + previousRoute.name + ':leave', ...this.currentRouteParams);\n                    }\n                    return (previousRoute.onLeave &&\n                        previousRoute.onLeave(...this.currentRouteParams));\n                }\n            })\n            .then(() => {\n                if (newRoute) {\n                    if (this.eventBus) {\n                        //\"route:about:beforeenter\"\n                        this.eventBus.trigger('route:' + newRoute.name + ':beforeenter', ...routeParams);\n                    }\n                    return (newRoute.onBeforeEnter &&\n                        newRoute.onBeforeEnter(...routeParams));\n                }\n            })\n            .then(() => {\n                if (newRoute) {\n                    if (this.eventBus) {\n                        //\"route:about:enter\"\n                        this.eventBus.trigger('route:' + newRoute.name + ':enter', ...routeParams);\n                    }\n                    return newRoute.onEnter && newRoute.onEnter(...routeParams);\n                }\n            })\n            .then(() => {\n                this.currentRoute = newRoute;\n                this.currentRouteParams = routeParams;\n            });\n    }\n    findNewActiveRoute(url) {\n        for (let i = 0; i < this.routes.length; i++) {\n            let route = this.routes[i];\n            if (typeof route.match === 'string') {\n                if (url === route.match) {\n                    return route;\n                }\n            }\n            else if (typeof route.match === 'function') {\n                if (route.match(url)) {\n                    return route;\n                }\n            }\n            else if (route.match instanceof RegExp) {\n                if (url.match(route.match)) {\n                    return route;\n                }\n            }\n        }\n    }\n    getRouteParams(newRoute, url) {\n        if (!newRoute) {\n            return [];\n        }\n        if (newRoute.match instanceof RegExp) {\n            var params = url.match(newRoute.match) || [];\n            params.shift();\n            return params;\n        }\n        else {\n            return [];\n        }\n    }\n}\n\n\n\n\n"],"sourceRoot":""}